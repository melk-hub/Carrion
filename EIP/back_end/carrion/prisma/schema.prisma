// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_1")
}

model User {
  id                 String     @id @default(uuid()) @db.Uuid
  username           String     @unique
  firstName          String
  lastName           String?
  email              String     @unique
  password           String?
  birthDate          DateTime?
  createdAt          DateTime   @default(now())
  role               Role       @default(VISITOR)
  jobApplies         jobApply[] @relation("UserJobApplies")
  Settings           Settings?  @relation("UserSettings")
  hashedRefreshToken String?    @unique
  tokens             Token[]    @relation("UserTokens")
  historyId          String?
}

model Token {
  id                String   @id @default(uuid()) @db.Uuid
  name              String
  accessToken       String
  refreshToken      String
  tokenTimeValidity DateTime
  createdAt         DateTime @default(now())
  userId            String   @db.Uuid
  user              User     @relation("UserTokens", fields: [userId], references: [id])
}

model jobApply {
  id            String   @id @default(uuid()) @db.Uuid
  Title         String
  Company       String
  Location      String?
  Salary        Int?
  User          User     @relation("UserJobApplies", fields: [UserId], references: [id], onDelete: Cascade)
  UserId        String   @db.Uuid
  status        Status
  imageUrl      String?
  contractType  String
  interviewDate DateTime?
  createdAt     DateTime @default(now())
}

model Settings {
  id     String @id @default(uuid()) @db.Uuid
  user   User   @relation("UserSettings", fields: [UserId], references: [id], onDelete: Cascade)
  UserId String @unique @db.Uuid
}

enum Status {
  ON
  OFF
  PENDING
}

enum Role {
  ADMIN
  USER
  MANAGER
  DEV
  VISITOR
}
